{"version":3,"sources":["consts/CONFIGS.js","pages/HomePage/HomePage.js","redux/pokemons/pokemons.js","redux/pokemonDetail/pokemonDetail.js","redux/selectors.js","shared/components/Table/MyTable.js","shared/components/HightLightSearchText/HighLightSearchText.js","pages/PokemonsPage/PokemonsPage.js","pages/PokemonPage/PokemonPage.js","pages/AdminPage/AdminPage.js","consts/PATHS.js","pages/NotFoundPage/NotFoundPage.js","routes.js","App/Navbar/Navbar.js","shared/helpers/findRoute/findRoute.js","theme.js","App/App.js","index.js","redux/getStore.js"],"names":["CONFIGS","ROOT_URL","HomePage","property","content","name","Typography","variant","pokemonsAdapter","createEntityAdapter","selectId","pokemon","fetchPokemons","createAsyncThunk","page","perPage","axios","method","url","params","limit","offset","then","response","pokemons","data","results","count","initialState","getInitialState","loading","currentRequestId","undefined","error","createSlice","reducers","extraReducers","pending","state","action","meta","requestId","fulfilled","payload","setAll","rejected","message","fetchPokemonDetail","id","height","weight","sprites","entity","pokemonDetail","pokemonsSelectors","selectCount","selectLoading","selectAll","getSelectors","pokemonDetailSelectors","useStyles","makeStyles","tableContainer","position","loadingModal","top","left","width","opacity","zIndex","display","alignItems","justifyContent","loadingModalHidden","loadingModalVisible","backgroundColor","cellRoot","lineHeight","MyTable","rows","columns","isLoading","classes","TableContainer","component","Paper","className","classNames","LinearProgress","Table","TableHead","TableRow","map","column","TableCell","title","TableBody","row","render","defaultProps","React","memo","HighLightSearchText","text","highlight","style","trim","regex","RegExp","parts","split","filter","part","i","test","input","flex","margin","PokemonsPage","location","useLocation","history","useHistory","dispatch","useDispatch","query","URLSearchParams","search","parseInt","get","useState","inputValue","setInputValue","textSearch","setTextSearch","useSelector","counts","useMemo","rowsFiltered","toLowerCase","includes","useEffect","delay","setTimeout","clearTimeout","totalPages","searchText","to","TextField","placeholder","value","onChange","evt","target","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","event","newPage","push","onChangeRowsPerPage","newPerPage","PokemonPage","props","color","front_default","src","alt","back_default","AdminPage","setIsLoading","PATHS","HOME","POKEMONS","POKEMON_DETAIL","ADMIN","NOT_FOUND","NotFoundPage","routes","path","exact","hydrate","fetchDataForPage","theme","root","flexGrow","menuButton","marginRight","spacing","textDecoration","highLight","padding","Navbar","pathname","AppBar","Toolbar","Link","findRoute","match","foundRoute","find","route","matchPath","Boolean","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","App","unListen","listen","ThemeProvider","store","preloadedState","configureStore","reducer","getStore","window","__PRELOADED_STATE__","Main","jssStyles","document","querySelector","parentElement","removeChild","StrictMode","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.880d8ef6.chunk.js","sourcesContent":["const CONFIGS = {\n    ROOT_URL: 'https://serverside-rendering-cra.df.r.appspot.com'\n}\n\nexport default CONFIGS;","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Typography } from '@material-ui/core';\nimport CONFIGS from \"../../consts/CONFIGS\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Home</title>\n        <meta property=\"og:title\" content=\"Home page\"/>\n        <meta property=\"og:description\" content=\"Server-side rendering for create react app. Lorem ipsum dolor sit amet posuere, congue massa\"/>\n        <meta property=\"og:image\" content = {`${CONFIGS.ROOT_URL}/ssr.png`}/>\n        <meta name=\"twitter:card\" content=\"Home page\"/>\n        <meta property=\"og:site_name\" content=\"Server-side rendering for create react app\"/>\n      </Helmet>\n      <div>\n      <Typography variant=\"h4\">Home page</Typography>\n      <Typography>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec non eros eu velit consectetur feugiat.\n        Suspendisse condimentum augue tortor, non faucibus massa sodales et. Donec at erat pretium, sagittis enim\n        posuere, congue massa.\n        Aliquam dapibus metus justo, quis fringilla metus consectetur a. Sed ornare volutpat nibh, euismod rutrum ante\n        bibendum eget.\n        Cras suscipit odio ac libero feugiat suscipit. Nullam purus urna, pharetra ac felis id, vehicula volutpat felis.\n        Nullam a magna euismod, porttitor dolor placerat, viverra nibh. Aliquam sed accumsan eros, ac tempus erat.\n        Praesent vehicula sapien nec arcu sodales, et condimentum mi elementum. In efficitur sapien vitae luctus\n        volutpat.\n        Suspendisse interdum rhoncus dolor nec tincidunt. Phasellus pellentesque ipsum non diam bibendum ullamcorper.\n        Aliquam ultricies fringilla feugiat. Morbi ultricies sed dolor id accumsan.\n      </Typography>\n    </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios';\n\nexport const pokemonsAdapter = createEntityAdapter({\n  selectId: pokemon => pokemon.name\n});\n\nexport const fetchPokemons = createAsyncThunk(\n  'pokemons/fetch',\n  ({ page, perPage }) => axios({\n    method: 'GET',\n    url: 'https://pokeapi.co/api/v2/pokemon',\n    params: {\n      limit: perPage,\n      offset: page * perPage\n    },\n  }).then(response => ({ pokemons: response.data.results, count: response.data.count }))\n);\n\nconst initialState = pokemonsAdapter.getInitialState({\n  loading: 'idle',\n  count: 0,\n  currentRequestId: undefined,\n  error: null\n});\n\nexport const pokemons = createSlice({\n  name: 'pokemons',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPokemons.pending]: (state, action) => {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n        state.error = null\n    },\n    [fetchPokemons.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if(requestId === state.currentRequestId) {\n        const { pokemons, count } = action.payload;\n        state.loading = 'idle';\n        pokemonsAdapter.setAll(state, pokemons);\n        state.count = count;\n        state.currentRequestId = undefined;\n      }\n      \n    },\n    [fetchPokemons.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if(requestId === state.currentRequestId) {\n        state.loading = 'idle';\n        state.error = action.error.message;\n        state.currentRequestId = undefined;\n      }\n    }\n  }\n})\n\nexport default pokemons.reducer;\n\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios';\n\nexport const fetchPokemonDetail = createAsyncThunk(\n  'pokemonDetail/fetch',\n  ({ id }) => axios({\n    method: 'GET',\n    url: `https://pokeapi.co/api/v2/pokemon/${ id }`,\n  }).then(({ data: { id, height, weight, name, sprites } }) => ({\n    id,\n    height,\n    weight,\n    name,\n    sprites\n  }))\n);\n\nconst initialState = {\n  loading: 'idle',\n  entity: null,\n  currentRequestId: undefined,\n  error: null\n};\n\nexport const pokemonDetail = createSlice({\n  name: 'pokemonDetail',\n  initialState,\n  reducers: {\n  },\n  extraReducers: {\n    [fetchPokemonDetail.pending]: (state, action) => {\n      state.loading = 'pending';\n      state.currentRequestId = action.meta.requestId;\n      state.error = null\n    },\n    [fetchPokemonDetail.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (requestId === state.currentRequestId) {\n        state.entity = action.payload;\n        state.loading = 'idle';\n        state.currentRequestId = undefined;\n      }\n      \n    },\n    [fetchPokemonDetail.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (requestId === state.currentRequestId) {\n        state.loading = 'idle';\n        state.error = action.error.message;\n        state.currentRequestId = undefined;\n      }\n    }\n  }\n})\n\nexport default pokemonDetail.reducer;\n\n","import { pokemonsAdapter } from './pokemons/pokemons';\n\nexport const pokemonsSelectors = {\n  selectCount: state => state.pokemons.count,\n  selectLoading: state => state.pokemons.loading,\n  selectAll: pokemonsAdapter.getSelectors( state => state.pokemons).selectAll\n}\n\nexport const pokemonDetailSelectors = {\n  selectEntity: state => state.pokemonDetail.entity,\n  selectLoading: state => state.pokemonDetail.loading,\n  selectError: state => state.pokemonDetail.error\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LinearProgress, makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport classNames from 'classnames';\n\nconst styles = {\n  tableContainer: {\n    position: 'relative',\n  },\n  loadingModal: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    opacity: 0.5,\n    zIndex: -1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loadingModalHidden: {\n    zIndex: -1\n  },\n  loadingModalVisible: {\n    zIndex: 999,\n    backgroundColor: 'lightgrey'\n  },\n  cellRoot: {\n    lineHeight: 0.3\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nconst MyTable = ({ rows, columns, isLoading }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer\n      component={ Paper }\n      className={ classNames(classes.tableContainer) }\n    >\n      { isLoading && <LinearProgress/> }\n      <div\n        className={ classNames(\n          classes.loadingModal,\n          isLoading ? classes.loadingModalVisible : classes.loadingModalHidden)\n        }\n      />\n      <Table>\n        <TableHead>\n          <TableRow>\n            {\n              columns.map(column => (\n                <TableCell key={ column.id }>\n                  { column.title }\n                </TableCell>\n              ))\n            }\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { rows.map(row => (\n            <TableRow key={ row.id }>\n              { columns.map(column => (\n                <TableCell key={ column.id } className={ classes.cellRoot }>\n                  { column.render(row) }\n                </TableCell>\n              )) }\n            </TableRow>\n          )) }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nMyTable.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  })),\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    render: PropTypes.func.isRequired\n  })),\n  isLoading: PropTypes.bool\n}\n\nMyTable.defaultProps = {\n  isLoading: false\n}\n\n\nexport default React.memo(MyTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HighLightSearchText = ({ text, highlight, style }) => {\n  if (!highlight.trim()) {\n    return (<span style={ style }>{text}</span>);\n  }\n  const regex = new RegExp(`(${highlight})`, 'gi');\n  const parts = text ? text.split(new RegExp(`(${highlight})`, 'gi')): [];\n  return (\n    <span style={ style }>\n      {parts.filter(part => part).map((part, i) => (\n        regex.test(part) ? <mark key={ i }>{part}</mark> : <span key={ i }>{part}</span>\n      ))}\n    </span>\n  );\n};\n\nHighLightSearchText.defaultProps = {\n  highlight: ''\n}\nHighLightSearchText.propTypes = {\n  text: PropTypes.string,\n  highlight: PropTypes.string,\n  style: PropTypes.object\n};\n\nexport default HighLightSearchText;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { pokemonsSelectors } from '../../redux/selectors';\nimport Table from '../../shared/components/Table/MyTable';\nimport HighLightSearchText from '../../shared/components/HightLightSearchText/HighLightSearchText';\nimport { makeStyles, TablePagination, TextField } from '@material-ui/core';\nimport { Helmet } from 'react-helmet-async';\nimport CONFIGS from \"../../consts/CONFIGS\";\nimport { fetchPokemons } from '../../redux/pokemons/pokemons';\n\nconst getColumns = searchText => [\n  {\n    id: '1',\n    title: 'Name',\n    render: content => (\n      <HighLightSearchText\n        text={ content.name }\n        highlight={ searchText }\n      />\n    )\n  },\n  {\n    id: '2',\n    title: 'Detail URL',\n    render: content => <Link className=\"link\" to={ `/pokemons/${ content.id }` }>View detail</Link>\n  }\n];\n\nconst useStyles = makeStyles({\n  input: {\n    flex: 1,\n    margin: '15px 0'\n  },\n});\n\nconst PokemonsPage = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch()\n  \n  const query = new URLSearchParams(location.search);\n  const page = parseInt(query.get('page')) || 0;\n  const perPage = parseInt(query.get('perPage')) || 20;\n  \n  const [inputValue, setInputValue] = useState('');\n  const [textSearch, setTextSearch] = useState('');\n  \n  const pokemons = useSelector(pokemonsSelectors.selectAll);\n  const counts = useSelector(pokemonsSelectors.selectCount);\n  const loading = useSelector(pokemonsSelectors.selectLoading);\n  \n  const rows = useMemo(() => pokemons.map(pokemon => ({\n    id: pokemon.name,\n    name: pokemon.name,\n    url: pokemon.url\n  })), [pokemons]);\n  \n  const rowsFiltered = useMemo(() =>\n    rows.filter(row => row.name.toLowerCase().includes(textSearch.toLowerCase())), [rows, textSearch]);\n  \n  useEffect(() => {\n    const delay = setTimeout(() => {\n      setTextSearch(inputValue)\n    }, 250);\n    return () => {\n      clearTimeout(delay);\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    dispatch(fetchPokemons({ page, perPage }))\n  }, [])\n  \n  const totalPages = counts;\n  \n  const changePage = (event, newPage) => history.push(`pokemons?page=${ newPage }&perPage=${ perPage }`);\n  \n  const changePerPage = event => {\n    const newPerPage = parseInt(event.target.value, 10);\n    history.push(`pokemons?page=0&perPage=${ newPerPage }`)\n  };\n  \n  const columns = useMemo(() => getColumns(textSearch), [textSearch]);\n  \n  return (\n    <div className=\"pokemonsPage\">\n      <Helmet>\n        <title>Pokemons List</title>\n        <meta property=\"og:title\" content={`Pokemons List`}/>\n        <meta property=\"og:description\" content={`Server-side rendering for create react app. Pokemons list`}/>\n        <meta property=\"og:image\" content = { `${CONFIGS.ROOT_URL}/ssr.png` }/>\n        <meta name=\"twitter:card\" content={`Server-side rendering for create react app. Pokemons list`}/>\n        <meta property=\"og:site_name\" content=\"Server-side rendering for create react app\"/>\n      </Helmet>\n      <TextField\n        className={ classes.input }\n        placeholder=\"Filter on the current page...\"\n        variant=\"outlined\"\n        value={ inputValue }\n        onChange={ evt => setInputValue(evt.target.value) }\n      />\n      <Table\n        rows={ rowsFiltered }\n        columns={ columns }\n        isLoading={ loading === 'pending' }\n      />\n      { totalPages > 0 && (\n        <TablePagination\n          rowsPerPageOptions={ [10, 20, 40] }\n          component=\"div\"\n          count={ totalPages }\n          rowsPerPage={ perPage }\n          page={ page }\n          onChangePage={ changePage }\n          onChangeRowsPerPage={ changePerPage }\n        />) }\n    </div>\n  );\n};\n\nexport default PokemonsPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { pokemonDetailSelectors } from '../../redux/selectors';\nimport { Typography } from '@material-ui/core';\nimport { Helmet } from 'react-helmet-async';\nimport { useLocation } from 'react-router';\n\nconst PokemonPage = (props) => {\n  const pokemon = useSelector(pokemonDetailSelectors.selectEntity);\n  const loading = useSelector(pokemonDetailSelectors.selectLoading);\n  const error = useSelector(pokemonDetailSelectors.selectError);\n  if (loading==='pending') return <h1>Loading</h1>;\n  if (error) return <h3 style={ { color: 'red' } }> { error } </h3>\n  if (pokemon!==null) {\n    const { height, weight, name, sprites } = pokemon;\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>{ pokemon.name }</title>\n            <meta property=\"og:title\" content={`Pokemon Detail page - ${name}`}/>\n            <meta property=\"og:description\" content={`Server-side rendering for create react app. Pokemon detail: ${name}`}/>\n            <meta property=\"og:image\" content = { sprites.front_default }/>\n            <meta name=\"twitter:card\" content={`Server-side rendering for create react app. Pokemon detail: ${name}`}/>\n            <meta property=\"og:site_name\" content=\"Server-side rendering for create react app\"/>\n        </Helmet>\n        <Typography>ID: { name }</Typography>\n        <Typography>Height: { height }</Typography>\n        <Typography>Weight: { weight }</Typography>\n        <Typography>Name: { name }</Typography>\n        <img src={ sprites.front_default } alt=\"Front default pokemon\"/>\n        <img src={ sprites.back_default } alt=\"Back default pokemon\"/>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default PokemonPage;\n","import React, { useEffect, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Helmet } from 'react-helmet-async';\n\nconst AdminPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    let delay = setTimeout(()=>{\n      setIsLoading(false);\n    }, 3000)\n    return () => { clearTimeout(delay) }\n  }, [])\n\n  return (\n    <>\n      <Helmet>\n        <title>Admin</title>\n      </Helmet>\n      {\n        isLoading ? (\n          <Typography variant=\"h4\">\n            Loading ...\n          </Typography>\n        ) : (\n          <Typography variant=\"h4\">\n            Admin page.\n          </Typography>\n        )\n      }\n    </>\n  );\n};\n\nexport default AdminPage;\n","const PATHS = {\n  HOME: '/',\n  POKEMONS: '/pokemons',\n  POKEMON_DETAIL: '/pokemons/:id',\n  ADMIN: '/admin',\n  NOT_FOUND: '*'\n}\n\nexport const PATHS_WITH_SSR = [\n  PATHS.HOME,\n  PATHS.POKEMONS,\n  PATHS.POKEMON_DETAIL\n];\n\nexport default PATHS;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nconst NotFoundPage = () => {\n  return (\n    <Typography variant=\"h1\">\n      Not FOUND PAGE\n    </Typography>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport HomePage from './pages/HomePage/HomePage';\nimport { fetchPokemons } from './redux/pokemons/pokemons';\nimport { fetchPokemonDetail } from './redux/pokemonDetail/pokemonDetail';\nimport PokemonsPage from './pages/PokemonsPage/PokemonsPage';\nimport PokemonPage from './pages/PokemonPage/PokemonPage';\nimport AdminPage from './pages/AdminPage/AdminPage';\nimport PATHS from './consts/PATHS';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nconst routes = [\n  {\n    path: PATHS.HOME,\n    render: () => <HomePage/>,\n    exact: true,\n    hydrate: true,\n  },\n  {\n    path: PATHS.POKEMONS,\n    render: () => <PokemonsPage/>,\n    exact: true,\n    hydrate: true,\n    fetchDataForPage: ({ search }) => dispatch => {\n      const query = new URLSearchParams(search);\n      const page = parseInt(query.get('page')) || 0;\n      const perPage = parseInt(query.get('perPage')) || 20;\n      return dispatch(fetchPokemons({ page, perPage}));\n    },\n  },\n  {\n    path: PATHS.POKEMON_DETAIL,\n    render: () => <PokemonPage/>,\n    exact: true,\n    fetchDataForPage: ({ params }) => dispatch => {\n      const id = params.id;\n      return dispatch(fetchPokemonDetail({ id }));\n    },\n    hydrate: true\n  },\n  {\n    path: PATHS.ADMIN,\n    render: () => <AdminPage/>,\n    hydrate: false,\n  },\n  {\n    path: PATHS.NOT_FOUND,\n    render: () => <NotFoundPage/>,\n    hydrate: false\n  }\n]\n\nexport default routes;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'white',\n    marginRight: 20,\n    textDecoration: 'none'\n  },\n  highLight: {\n    backgroundColor: 'gray',\n    padding: '5px 10px',\n  }\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const pathname = location.pathname;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography\n          className={\n            classNames({\n              [classes.title]: true,\n              [classes.highLight]: pathname === '/'\n            })\n          }\n          component={ Link }\n          to=\"/\"\n          color=\"textPrimary\"\n        >\n          Home\n        </Typography>\n        <Typography\n          className={\n            classNames({\n              [classes.title]: true,\n              [classes.highLight]: pathname === '/pokemons'\n            })\n          }\n          component={ Link }\n          to=\"/pokemons\"\n        >\n          Pokemons\n        </Typography>\n        <Typography\n          className={\n            classNames({\n              [classes.title]: true,\n              [classes.highLight]: pathname === '/admin'\n            })\n          }\n          component={ Link }\n          to=\"/admin\"\n        >\n          Admin\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import routes from '../../../routes';\nimport { matchPath } from 'react-router-dom';\n\nconst findRoute = pathname => {\n  let match = null;\n  const foundRoute = routes.find(route => {\n    match = matchPath(pathname, {\n      path: route.path,\n      exact: route.exact\n    });\n    return Boolean(match);\n  });\n  return {\n    foundRoute,\n    match\n  }\n};\n\nexport default findRoute;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\n\n// Create a theme instance.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route, useHistory,\n} from \"react-router-dom\";\nimport routes from '../routes';\nimport Navbar from './Navbar/Navbar';\nimport findRoute from '../shared/helpers/findRoute/findRoute';\nimport { useDispatch } from 'react-redux';\nimport theme from '../theme';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst App = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleFetchDataForActivatedPage = ({ pathname, search }) => {\n      const { foundRoute, match } = findRoute(pathname);\n      if (foundRoute && foundRoute.fetchDataForPage) {\n        dispatch(foundRoute.fetchDataForPage({\n          search,\n          params: match.params\n        }))\n      }\n    };\n    const unListen = history.listen(handleFetchDataForActivatedPage);\n    return () => unListen();\n  }, [history, dispatch]);\n\n  return (\n      <ThemeProvider theme={ theme }>\n        <Navbar/>\n        <Switch>\n          {\n            routes.map(route => (\n              <Route\n                key={ route.path }\n                path={ route.path }\n                exact={ route.exact }\n                render={ route.render }\n              />))\n          }\n        </Switch>\n      </ThemeProvider>\n  );\n};\n\nexport default React.memo(App);\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport { Provider } from 'react-redux'\nimport getStore from './redux/getStore'\nimport { BrowserRouter } from \"react-router-dom\";\nimport findRoute from './shared/helpers/findRoute/findRoute';\nimport {HelmetProvider} from \"react-helmet-async\";\n\n// ************** Config front-end store *********************\nconst preloadedState = window.__PRELOADED_STATE__\nconst store = getStore(preloadedState );\n// *****************************************************************\n\nconst { foundRoute, match } = findRoute(window.location.pathname);\nif((foundRoute && !foundRoute.hydrate) || process.env.NODE_ENV === 'development') {\n  if(foundRoute.fetchDataForPage) {\n    store.dispatch(foundRoute.fetchDataForPage({params: match.params, search: window.location.search}));\n  }\n}\n\nconst Main = () => {\n  useEffect(() => {\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  \n  return (\n    <React.StrictMode>\n      <Provider store={ store }>\n        <BrowserRouter>\n          <HelmetProvider>\n            <App/>\n          </HelmetProvider>\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>\n  )\n};\nif(foundRoute && foundRoute.hydrate && process.env.NODE_ENV === 'production') {\n  ReactDOM.hydrate(<Main/>, document.getElementById('root'));\n} else {\n  ReactDOM.render(<Main/>, document.getElementById('root'));\n}\n\n","import { configureStore } from '@reduxjs/toolkit'\nimport pokemons from './pokemons/pokemons';\nimport pokemonDetail from './pokemonDetail/pokemonDetail';\n\nexport const getStore = (preloadedState) => configureStore({\n  reducer: {\n    pokemons,\n    pokemonDetail\n  },\n  preloadedState\n});\n\nexport default getStore;\n"],"sourceRoot":""}